import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import QueryProvider from "@/utils/providers/QueryProvider";
import Beacon from "@/utils/init/Beacon";
import { cookies } from "next/headers";
import { NavLink } from "@/components/common/NavLink";
import { NavBar } from "@/components/custom/NavBar";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "IoT Data",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // retrieve cookies updated on theme change, otherwise client and ssr wont match and hydration error occurs
  const theme = (await cookies()).get("theme")?.value || "light";

  const themeInitScript = `
  try {
    var theme = document.cookie
      .split("; ")
      .find(row => row.startsWith("theme="))
      ?.split("=")[1] || "${theme}";
    document.documentElement.setAttribute("data-theme", theme);
  } catch(e) {}
`;

  return (
    <html lang="en" data-theme={theme}>
      <head>
        <script dangerouslySetInnerHTML={{ __html: themeInitScript }} />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <Beacon />
        <div className="max-w-[1600px] mx-auto relative">
          <NavBar />
          <QueryProvider>{children}</QueryProvider>
        </div>
      </body>
    </html>
  );
}
